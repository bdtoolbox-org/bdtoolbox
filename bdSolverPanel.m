classdef bdSolverPanel < handle
    %bdSolverPanel - a GUI tab panel for displaying solver options.
    
    % Copyright (c) 2016, Stewart Heitmann <heitmann@ego.id.au>
    % All rights reserved.
    %
    % Redistribution and use in source and binary forms, with or without
    % modification, are permitted provided that the following conditions
    % are met:
    %
    % 1. Redistributions of source code must retain the above copyright
    %    notice, this list of conditions and the following disclaimer.
    % 
    % 2. Redistributions in binary form must reproduce the above copyright
    %    notice, this list of conditions and the following disclaimer in
    %    the documentation and/or other materials provided with the
    %    distribution.
    %
    % THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    % "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    % LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    % FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    % COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    % INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    % BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    % LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    % CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    % LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
    % ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    % POSSIBILITY OF SUCH DAMAGE.
    properties (Access=private) 
%        tab     % handle to uitab object
%        pan     % handle to uipanel object
%        ax      % handle to plot axes
%        plt     % handle to plot line
    end

    methods        
        function this = bdSolverPanel(tabgroup,title,sys,control)
            % construct the uitab
            tab = uitab(tabgroup,'title',title, 'Units','pixels');
            
            % get tab geometry
            parentx = tab.Position(1);
            parenty = tab.Position(2);
            parentw = tab.Position(3);
            parenth = tab.Position(4);

            % compute axes geometry
            axesh = (parenth-210)/2;
            axesw = parentw-100;
            
            % construct the dydt axes
            ax1 = axes('Parent',tab, ...
                'Units','pixels', ...
                'Position', [60 150+axesh  axesw axesh]);
            plt1 = stairs(0,0, 'parent',ax1);
            %xlabel('time (t)','FontSize',14);
            ylabel('||dY||','FontSize',14);

            % construct the step-size axes
            ax2 = axes('Parent',tab, ...
                'Units','pixels', ...
                'Position', [60 120 axesw axesh]);
            plt2 = stairs(0,0, 'parent',ax2);
            xlabel('time (t)','FontSize',14);
            ylabel('step size (dt)','FontSize',14);
            
            % edit box geometry
            boxw = 50;
            boxh = 20;

            if isfield(sys,'odeopt')
                % Error Control
                uicontrol('Style','text', ...
                    'String','Error Control', ...
                    'HorizontalAlignment','left', ...
                    'FontUnits','pixels', ...
                    'FontWeight','bold', ...
                    'FontSize',12, ...
                ... 'BackgroundColor', 'w', ...
                    'Parent', tab, ...
                    'Position',[60 54 3*boxw+5 boxh]);

                % construct edit box for AbsTol
                val = sys.odeopt.AbsTol;
                fieldname = 'AbsTol';
                uicontrol('Style','edit', ...
                    'String',num2str(val,'%0.4g'), ...
                    'Value',val, ...
                    'HorizontalAlignment','right', ...
                    'FontUnits','pixels', ...
                    'FontSize',12, ...
                    'TooltipString', 'Absolute error tolerance', ...
                    'Parent', tab, ...
                    'Callback', @(hObj,~) this.ScalarCallback(hObj,fieldname), ...
                    'Position',[60 32 boxw boxh]);
                uicontrol('Style','text', ...
                    'String',fieldname, ...
                    'HorizontalAlignment','left', ...
                    'FontUnits','pixels', ...
                    'FontSize',12, ...
                ... 'BackgroundColor', 'w', ...
                    'Parent', tab, ...
                    'Position',[65+boxw 32 2*boxw boxh]);

                % construct edit box for RelTol
                val = sys.odeopt.RelTol;
                fieldname = 'RelTol';
                uicontrol('Style','edit', ...
                    'String',num2str(val,'%0.4g'), ...
                    'Value',val, ...
                    'HorizontalAlignment','right', ...
                    'FontUnits','pixels', ...
                    'FontSize',12, ...
                    'TooltipString', 'Relative error tolerance', ...
                    'Parent', tab, ...
                    'Callback', @(hObj,~) this.ScalarCallback(hObj,fieldname), ...
                    'Position',[60 10 boxw boxh]);
                uicontrol('Style','text', ...
                    'String',fieldname, ...
                    'HorizontalAlignment','left', ...
                    'FontUnits','pixels', ...
                    'FontSize',12, ...
                ... 'BackgroundColor', 'w', ...
                    'Parent', tab, ...
                    'Position',[65+boxw 10 2*boxw boxh]);

                % Step Size
                uicontrol('Style','text', ...
                    'String','Step Size', ...
                    'HorizontalAlignment','left', ...
                    'FontUnits','pixels', ...
                    'FontWeight','bold', ...
                    'FontSize',12, ...
                ... 'BackgroundColor', 'w', ...
                    'Parent', tab, ...
                    'Position',[75+3*boxw 54 3*boxw+5 boxh]);

                % construct edit box for InitialStep
                val = sys.odeopt.InitialStep;
                fieldname = 'InitialStep';
                uicontrol('Style','edit', ...
                    'String',num2str(val,'%0.4g'), ...
                    'Value',val, ...
                    'HorizontalAlignment','right', ...
                    'FontUnits','pixels', ...
                    'FontSize',12, ...
                    'TooltipString', 'Suggested initial step size', ...
                    'Parent', tab, ...
                    'Callback', @(hObj,~) this.ScalarCallback(hObj,fieldname), ...
                    'Position',[75+3*boxw 32 boxw boxh]);
                uicontrol('Style','text', ...
                    'String',fieldname, ...
                    'HorizontalAlignment','left', ...
                    'FontUnits','pixels', ...
                    'FontSize',12, ...
                ... 'BackgroundColor', 'w', ...
                    'Parent', tab, ...
                    'Position',[80+4*boxw 32 2*boxw boxh]);

                % construct edit box for MaxStep
                val = sys.odeopt.MaxStep;
                fieldname = 'MaxStep';
                uicontrol('Style','edit', ...
                    'String',num2str(val,'%0.4g'), ...
                    'Value',val, ...
                    'HorizontalAlignment','right', ...
                    'FontUnits','pixels', ...
                    'FontSize',12, ...
                    'Parent', tab, ...
                    'TooltipString', 'Maximum step size', ...
                    'Callback', @(hObj,~) this.ScalarCallback(hObj,fieldname), ...
                    'Position',[75+3*boxw 10 boxw boxh]);
                uicontrol('Style','text', ...
                    'String',fieldname, ...
                    'HorizontalAlignment','left', ...
                    'FontUnits','pixels', ...
                    'FontSize',12, ...
                ... 'BackgroundColor', 'w', ...
                    'Parent', tab, ...
                    'Position',[80+4*boxw 10 2*boxw boxh]);
            end
            
            % register a callback for resizing the panel
            set(tab,'SizeChangedFcn', @(~,~) this.SizeChanged(tab,ax1,ax2));

            % listen to the control panel for redraw events
            addlistener(control,'redraw',@(~,~) this.render(control,plt1,plt2));    
        end
        
    end
    
    methods (Access=private)
        function render(this,control,plt1,plt2)
            disp('bdSolverPanel.render()')
            tsteps = control.sol.x;
                        
            % render dy/dt versus time
            dydt = diff(control.sol.y,1,2);
            nrm = sqrt( sum(dydt.^2) );
            set(plt1, 'XData',tsteps, 'YData',nrm([1:end,end]));
            
            % render the step size versus time
            stepsize = diff(control.sol.x);
            set(plt2, 'XData',tsteps, 'YData',stepsize([1:end,end]));
        end
        
        % Callback for tab panel resizing.
        function SizeChanged(this,tab,ax1,ax2)
            disp('bdSolverPanel.SizeChanged()')
            
            % get new parent geometry
            parentw = tab.Position(3);
            parenth = tab.Position(4);

            % compute axes geometry
            %axesh = (parenth-210)/2;
            axesh = (parenth-160)/2;
            axesw = parentw-100;

            % resize axes
            ax1.Position(2) = 150 + axesh;
            ax1.Position(3) = axesw;
            ax1.Position(4) = axesh;
            ax2.Position(3) = axesw;
            ax2.Position(4) = axesh;

        end
        
        % Callback for generic scalar edit box
        function ScalarCallback(this,hObj,fieldname)
            % ensure hObj is still valid
            if ~isvalid(hObj)
                % The object no longer exists. User must have closed the parent window.
                return
            end
            
            % get the incoming value
            val = str2double(hObj.String);
            if isnan(val)
                dlg = errordlg(['''', hObj.String, ''' is not a valid number'],'Invalid Number','modal');
                val = hObj.Value;           % restore the previous value                
                uiwait(dlg);                % wait for dialog box to close
            else
                hObj.Value = val;           % remember the new value
            end            
            
            % update the edit box string
            hObj.String = num2str(val,'%0.4g');
        end           
    end
end

